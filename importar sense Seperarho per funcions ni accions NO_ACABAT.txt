using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.OleDb;
using System.Data.Odbc;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Xml;
using System.IO;

namespace tests
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }

        private void button1_Click(object sender, EventArgs e)
        {
            string connectionString;
            string codi = "";
            string descripcio = "";
            int preu = 0;
            int estoc = 0;
            bool repetits = false;
            int fila = 0;

            connectionString = "Driver={Microsoft Access Driver (*.mdb)};DBQ=minierpprova.mdb";
            OdbcConnection ConnexioMySQL = new OdbcConnection(connectionString);
            ConnexioMySQL.Open();

            XmlDocument xml = new XmlDocument();
            xml.Load("articles.xml");
            XmlNodeList xnList = xml.SelectNodes("/articles/article");

            foreach (XmlNode xn in xnList)
            {
                codi = xn["codi"].InnerText;
                descripcio = xn["descripcio"].InnerText;
                estoc = Convert.ToInt32(xn["estoc"].InnerText);
                preu = Convert.ToInt32(xn["preu"].InnerText);


                //PER SELECCIONAR DADES
                //crea el datadapter. No cal si el que volem son inserts
                OdbcDataAdapter da;
                da = new OdbcDataAdapter("Select codi, descripcio ,estoc,preu  from article", ConnexioMySQL);
                //omples el dataset amb les dades del da. 
                DataSet ds = new DataSet();
                da.Fill(ds);
                //ds.Tables[0].Rows.Count número de fila
                //Rows té tantes files com registres el select i tantes columnes com camps
                while (!repetits && fila < ds.Tables[0].Rows.Count)
                {
                    /*Console.WriteLine("codi: " + ds.Tables[0].Rows[fila][0].ToString());
                    Console.WriteLine("descripcio: " + ds.Tables[0].Rows[fila][1].ToString());
                    Console.WriteLine("estoc: " + ds.Tables[0].Rows[fila][2].ToString());
                    Console.WriteLine("preu: " + ds.Tables[0].Rows[fila][3].ToString());
                    Console.WriteLine("");*/
                    if (codi == ds.Tables[0].Rows[fila][0].ToString())
                    {
                        //GENERAR ERROR
                        CrearFitxerErrorXML();
                        afegirError("errors.xml", "DESCRIPCIO DE PROVA", "FEN TESTOS");
                        repetits = true;
                    }
                    fila++;
                }

                // PER FER UN INSERT O UPDATE
                if (!repetits)
                {
                    OdbcCommand cmd = new OdbcCommand();
                    cmd.Connection = ConnexioMySQL;
                    cmd.CommandText = "INSERT INTO article VALUES ('" + codi + "','" + descripcio + "','" + estoc + "','" + preu + "');";
                    cmd.ExecuteNonQuery();
                }
                
            }

            ConnexioMySQL.Close();
        }

        private void CrearFitxerErrorXML()
        {
            StreamWriter arxiu = new StreamWriter("errors.xml", false);
            arxiu.WriteLine("<?xml version=\"1.0\" encoding=\"utf-8\"?>");
            arxiu.WriteLine("<errors>");
            
            //escriure en XML
            arxiu.WriteLine("\t<error>");
            arxiu.WriteLine("\t\t<descripcio>" + "</descripcio>");
            arxiu.WriteLine("\t\t<proces>" + "</proces>");
            arxiu.WriteLine("\t</error>");
            arxiu.WriteLine("</errors>");
            
            arxiu.Close();
            
        }
        private void afegirError(string fitxer,string descripcio,string proces)
        {
            //CARREGUEM EN MEMÒRIA EL FITXER D'ERRORS
            XmlDocument doc = new XmlDocument();
            doc.Load(fitxer);
            //root representa l'arrel del document: <errors>
            XmlNode root = doc.DocumentElement;
            //CREEM UN NOU NODE D'ERROR  <error></error>
            XmlElement elem = doc.CreateElement("error");
            //CREEM SUBNODES FILL DE L'ERROR, TANTS COM NECESSITEM PER PRECISSAR 
            //DETALLS DE L'ERROR: DATA, PROCES QUE L'HA GENERAT, DESCRIPCIÓ ...
            XmlElement subElement1 = doc.CreateElement("descripcio");
            subElement1.InnerText = descripcio;
            XmlElement subElement2 = doc.CreateElement("proces");
            subElement2.InnerText = proces;
            //AFEGIM ELS SUBELEMENTS COM A FILLS DE l'ETIQUETA <error>
            elem.AppendChild(subElement1);
            elem.AppendChild(subElement2);
            //AFEGIM el nou error com a nou fill de l'arrel <errors>
            root.AppendChild(elem);
            //ACTUALITZEM EL DOCUMENT A DISC (FINS ARA TOT ES FEIA A MEMÒRIA)
            doc.Save(fitxer);
        }
    }
}
